---
version: "2.4"
volumes:
  gradle-cache:
services:
  grafana:
    image: grafana/grafana:6.2.5
    ports:
      - "127.0.0.1:10000:3000"
    volumes:
      - ./grafana/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources/
  prometheus:
    image: prom/prometheus:v2.16.0
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:10010:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
  prometheus-data-generator:
    image: littleangryclouds/prometheus-data-generator:latest
    ports:
      - "127.0.0.1:10020:9000"
    volumes:
      - ./prometheus-data-generator/:/prometheus-data-generator/
    environment:
      PDG_LOG_LEVEL: INFO
      PDG_CONFIG: /prometheus-data-generator/config.yml
  prom-configmap-reloader:
    image: littleangryclouds/configmap-reload
    volumes:
      - ./prometheus/:/prometheus/
    command:
      - -webhook-url=http://prometheus:9090/-/reload
      - -volume-dir=/prometheus/
      - -webhook-method=POST
  pdg-configmap-reloader:
    image: littleangryclouds/configmap-reload
    volumes:
      - ./prometheus-data-generator/:/prometheus-data-generator/
    command:
      - -webhook-url=http://prometheus-data-generator:9000/-/reload
      - -volume-dir=/prometheus-data-generator/
      - -webhook-method=GET
  linux-node-exporter:
    image: quay.io/prometheus/node-exporter
    pid: host
    volumes:
      - /:/host:ro,rslave
    command:
      - --path.rootfs=/host
    ports:
      - "127.0.0.1:10030:9100"
  python-microservice-flask:
    build:
      context: python-microservice
    volumes:
      - ./python-microservice/:/app/
    command:
      - python
      - flask-example.py
    ports:
      - "127.0.0.1:10040:8080"
  python-microservice-pyms:
    build:
      context: python-microservice
    volumes:
      - ./python-microservice/:/app/
    command:
      - python
      - pyms-example.py
    ports:
      - "127.0.0.1:10050:8080"
  java-microservice:
    image: gradle
    working_dir: /app/
    volumes:
      - gradle-cache:/home/gradle/.gradle
      - ./java-microservice:/app/
    command:
      - gradle
      - bootRun
      - --args="--spring.config.location=file:./src/main/java/resources/application.yml"
    ports:
      - "127.0.0.1:10060:8080"
  blackbox-exporter:
    image: prom/blackbox-exporter:master
    # volumes:
    #   - ./blackbox-exporter/:/config/
    # command:
    #   - --config.file=/config/config.yml
    ports:
      - "127.0.0.1:10070:9115"
  blackbox-configmap-reloader:
    image: littleangryclouds/configmap-reload
    volumes:
      - ./blackbox-exporter/:/config/
    command:
      - -webhook-url=http://blackbox-exporter:9115/-/reload
      - -volume-dir=/config/
      - -webhook-method=GET
